# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: azure-devops-yml-variables

steps:
- task: TerraformInstaller@0
  displayName: 'Terraform installer'
  inputs:
    terraformVersion: 'latest'
- task: TerraformCLI@0
  displayName: 'Initilizer'
  inputs:
    command: 'init'
    backendServiceArm: $(backendServiceArm)
    backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
    backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
    backendAzureRmContainerName: $(backendAzureRmContainerName)
    backendAzureRmKey: $(backendAzureRmKey)
    backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
    backendType: $(backendType)
    ensureBackend:  $(ensureBackend)

- task: TerraformCLI@0
  displayName: 'Validation'
  inputs:
    command: 'validate'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  displayName: 'aero-planner'
  inputs:
    command: 'plan'
    allowTelemetryCollection: true
    environmentServiceName: $(backendServiceArm)
- task: TerraformCLI@0
  displayName: 'Apply'
  inputs:
    command: 'apply'
    allowTelemetryCollection: true
    environmentServiceName: $(backendServiceArm)




- task: TerraformCLI@0
  displayName: 'aero-planner'
  inputs:
    command: 'plan'
    allowTelemetryCollection: true
    environmentServiceName: 'CIS_UK_Engineering_Academy'

- task: TerraformCLI@0
  displayName: 'Apply'
  inputs:
    command: 'apply'
    allowTelemetryCollection: true
    environmentServiceName: 'CIS_UK_Engineering_Academy'
